AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: 'AWS CloudFormation for testing Hybris with redis.'
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: 'ami-007e276c37b5ff2d7'
  EC2SubnetId:
    Description: EC2 instances Subnet
    Type: String
    ConstraintDescription: must be the name of an existing Subnet.
Resources:
  HybrisEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: 'm5.2xlarge'
      SecurityGroups: [!Ref 'InstanceSecurityGroup']
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'LatestAmiId'
      SubnetId: !Ref 'EC2SubnetId'
      Tags: 
        - Key: "Name"
            Value: "Test-Hybris-Server"
InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'SSHLocation'
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !Ref 'HTTP'
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: !Ref 'HTTPS'
Outputs:
  InstanceId:
    Description: InstanceId of the newly hybris created EC2 instance
    Value: !Ref 'HybrisEC2Instance'
  PrivateIP:
    Description: Private IP address of the newly created EC2 instance
    Value: !GetAtt [HybrisEC2Instance, PrivateIp]
